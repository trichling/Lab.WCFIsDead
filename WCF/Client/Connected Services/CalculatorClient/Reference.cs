//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lab.WCFIsDead.WCF.Client.CalculatorClient {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Calculation", Namespace="http://schemas.datacontract.org/2004/07/Lab.WCFIsDead.WCF.Server")]
    [System.SerializableAttribute()]
    public partial class Calculation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Operand1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Operand2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpertorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Operand1 {
            get {
                return this.Operand1Field;
            }
            set {
                if ((this.Operand1Field.Equals(value) != true)) {
                    this.Operand1Field = value;
                    this.RaisePropertyChanged("Operand1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Operand2 {
            get {
                return this.Operand2Field;
            }
            set {
                if ((this.Operand2Field.Equals(value) != true)) {
                    this.Operand2Field = value;
                    this.RaisePropertyChanged("Operand2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Opertor {
            get {
                return this.OpertorField;
            }
            set {
                if ((object.ReferenceEquals(this.OpertorField, value) != true)) {
                    this.OpertorField = value;
                    this.RaisePropertyChanged("Opertor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CalculationResult", Namespace="http://schemas.datacontract.org/2004/07/Lab.WCFIsDead.WCF.Server")]
    [System.SerializableAttribute()]
    public partial class CalculationResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Lab.WCFIsDead.WCF.Client.CalculatorClient.Calculation CalculationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Lab.WCFIsDead.WCF.Client.CalculatorClient.Calculation Calculation {
            get {
                return this.CalculationField;
            }
            set {
                if ((object.ReferenceEquals(this.CalculationField, value) != true)) {
                    this.CalculationField = value;
                    this.RaisePropertyChanged("Calculation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CalculatorClient.ICalculatorService", CallbackContract=typeof(Lab.WCFIsDead.WCF.Client.CalculatorClient.ICalculatorServiceCallback))]
    public interface ICalculatorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorService/Execute", ReplyAction="http://tempuri.org/ICalculatorService/ExecuteResponse")]
        Lab.WCFIsDead.WCF.Client.CalculatorClient.CalculationResult Execute(Lab.WCFIsDead.WCF.Client.CalculatorClient.Calculation calculation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorService/Execute", ReplyAction="http://tempuri.org/ICalculatorService/ExecuteResponse")]
        System.Threading.Tasks.Task<Lab.WCFIsDead.WCF.Client.CalculatorClient.CalculationResult> ExecuteAsync(Lab.WCFIsDead.WCF.Client.CalculatorClient.Calculation calculation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorService/GenerateRandomNumbers", ReplyAction="http://tempuri.org/ICalculatorService/GenerateRandomNumbersResponse")]
        void GenerateRandomNumbers(System.Guid requestId, int count, int delayInMs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorService/GenerateRandomNumbers", ReplyAction="http://tempuri.org/ICalculatorService/GenerateRandomNumbersResponse")]
        System.Threading.Tasks.Task GenerateRandomNumbersAsync(System.Guid requestId, int count, int delayInMs);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalculatorServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICalculatorService/Receive")]
        void Receive(System.Guid requestId, double randomNumber);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalculatorServiceChannel : Lab.WCFIsDead.WCF.Client.CalculatorClient.ICalculatorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculatorServiceClient : System.ServiceModel.DuplexClientBase<Lab.WCFIsDead.WCF.Client.CalculatorClient.ICalculatorService>, Lab.WCFIsDead.WCF.Client.CalculatorClient.ICalculatorService {
        
        public CalculatorServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public CalculatorServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public CalculatorServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public Lab.WCFIsDead.WCF.Client.CalculatorClient.CalculationResult Execute(Lab.WCFIsDead.WCF.Client.CalculatorClient.Calculation calculation) {
            return base.Channel.Execute(calculation);
        }
        
        public System.Threading.Tasks.Task<Lab.WCFIsDead.WCF.Client.CalculatorClient.CalculationResult> ExecuteAsync(Lab.WCFIsDead.WCF.Client.CalculatorClient.Calculation calculation) {
            return base.Channel.ExecuteAsync(calculation);
        }
        
        public void GenerateRandomNumbers(System.Guid requestId, int count, int delayInMs) {
            base.Channel.GenerateRandomNumbers(requestId, count, delayInMs);
        }
        
        public System.Threading.Tasks.Task GenerateRandomNumbersAsync(System.Guid requestId, int count, int delayInMs) {
            return base.Channel.GenerateRandomNumbersAsync(requestId, count, delayInMs);
        }
    }
}
